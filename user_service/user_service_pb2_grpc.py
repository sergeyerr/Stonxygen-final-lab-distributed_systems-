# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import user_service_pb2 as user__service__pb2


class user_serviceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddStockToUser = channel.unary_unary(
                '/userService.user_service/AddStockToUser',
                request_serializer=user__service__pb2.StockToUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.OkAnswer.FromString,
                )
        self.RemoveStockFromUser = channel.unary_unary(
                '/userService.user_service/RemoveStockFromUser',
                request_serializer=user__service__pb2.StockToUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.OkAnswer.FromString,
                )
        self.GetStocks = channel.unary_unary(
                '/userService.user_service/GetStocks',
                request_serializer=user__service__pb2.GetUserStocksRequest.SerializeToString,
                response_deserializer=user__service__pb2.StockAnswer.FromString,
                )
        self.GetAllStocks = channel.unary_unary(
                '/userService.user_service/GetAllStocks',
                request_serializer=user__service__pb2.GetAllStocksRequest.SerializeToString,
                response_deserializer=user__service__pb2.StockAnswer.FromString,
                )


class user_serviceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddStockToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveStockFromUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllStocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_user_serviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddStockToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddStockToUser,
                    request_deserializer=user__service__pb2.StockToUserRequest.FromString,
                    response_serializer=user__service__pb2.OkAnswer.SerializeToString,
            ),
            'RemoveStockFromUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveStockFromUser,
                    request_deserializer=user__service__pb2.StockToUserRequest.FromString,
                    response_serializer=user__service__pb2.OkAnswer.SerializeToString,
            ),
            'GetStocks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStocks,
                    request_deserializer=user__service__pb2.GetUserStocksRequest.FromString,
                    response_serializer=user__service__pb2.StockAnswer.SerializeToString,
            ),
            'GetAllStocks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllStocks,
                    request_deserializer=user__service__pb2.GetAllStocksRequest.FromString,
                    response_serializer=user__service__pb2.StockAnswer.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'userService.user_service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class user_service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddStockToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService.user_service/AddStockToUser',
            user__service__pb2.StockToUserRequest.SerializeToString,
            user__service__pb2.OkAnswer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveStockFromUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService.user_service/RemoveStockFromUser',
            user__service__pb2.StockToUserRequest.SerializeToString,
            user__service__pb2.OkAnswer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService.user_service/GetStocks',
            user__service__pb2.GetUserStocksRequest.SerializeToString,
            user__service__pb2.StockAnswer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllStocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService.user_service/GetAllStocks',
            user__service__pb2.GetAllStocksRequest.SerializeToString,
            user__service__pb2.StockAnswer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
